# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  - master
variables:
  CIBW_BUILD: cp37-win_amd64

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: "3.7"
    displayName: "Use Python 3.7"
  - script: |
      python -m pip install --upgrade pip
      python -m pip install poetry twine
      poetry config virtualenvs.create false
      poetry install

    displayName: "Install dependencies"

  - script: |
      python -m flake8 .
    displayName: 'Run lint tests'

  - script: |
      pip install pytest
      pip install pytest-cov
      pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html
    displayName: 'Test with pytest'
    env:
      API_URL: $(API_URL)
      USERNAME: $(USERNAME)
      PASSWORD: $(PASSWORD)
      API_KEY: $(API_KEY)
      ACCOUNT_ID: $(ACCOUNT_ID)

  # - script: |
  #     poetry build --format wheel
  #     poetry build --format sdist
  #   displayName: "Build artifact"
  
  - bash: |
      poetry add -D cibuildwheel==1.6.4
      poetry run python -m cibuildwheel --output-dir dist .
    displayName: 'Install cibuildwheel and create windows wheels'
    
  - task: PublishBuildArtifacts@1
    inputs: {pathtoPublish: 'dist'}

  - task: TwineAuthenticate@1
    displayName: "Twine Authenticate"
    inputs:
      artifactFeed: "Osiris/Osiris"

  - script: |
      python -m pip install twine colorama
      python -m twine upload -r Osiris --config-file $(PYPIRC_PATH) dist/*
    displayName: 'upload packages to Azure repo'